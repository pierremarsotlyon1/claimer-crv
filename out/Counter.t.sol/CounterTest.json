{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimerTest",
      "outputs": [
        {
          "internalType": "contract Claimer",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600c805460ff19166001179055601e805474d533a949740bb3306d119cc777fa900ba034cd52016001600160a81b0319909116179055601f80546001600160a01b031990811673f939e0a03fb07f59a73314e73794be0e57ac1b4e179091556020805482167349887df6fe905663cdb46c616bfbfbb50e85a2651790556021805490911673989aeb4d175e16225e39e87d0d97a3360524ad801790553480156100ac57600080fd5b50611415806100bc6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063916a17c61161008c578063daaa15cf11610066578063daaa15cf1461018e578063dd972110146101b9578063e20c9f71146101c1578063fa7626d4146101c957600080fd5b8063916a17c614610166578063b5508aa91461016e578063ba414fa61461017657600080fd5b80633e5e3c23116100c85780633e5e3c231461012c5780633f7286f41461013457806366d9a9a01461013c57806385226c811461015157600080fd5b80630a9254e4146100ef5780631ed7831c146100f95780632ade388014610117575b600080fd5b6100f76101d6565b005b610101610221565b60405161010e9190610c25565b60405180910390f35b61011f610283565b60405161010e9190610cb8565b6101016103c5565b610101610425565b610144610485565b60405161010e9190610d78565b61015961056b565b60405161010e9190610e2b565b61014461063b565b610159610721565b61017e6107f1565b604051901515815260200161010e565b6022546101a1906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b6100f7610895565b610101610b48565b601e5461017e9060ff1681565b6040516101e290610c18565b604051809103906000f0801580156101fe573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b0392909216919091179055565b6060601680548060200260200160405190810160405280929190818152602001828054801561027957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161025b575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156103bc57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103a557838290600052602060002001805461031890610e8d565b80601f016020809104026020016040519081016040528092919081815260200182805461034490610e8d565b80156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050505050815260200190600101906102f9565b5050505081525050815260200190600101906102a7565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015610279576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161025b575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015610279576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161025b575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103bc5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561055357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105155790505b505050505081525050815260200190600101906104a9565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103bc5783829060005260206000200180546105ae90610e8d565b80601f01602080910402602001604051908101604052809291908181526020018280546105da90610e8d565b80156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b50505050508152602001906001019061058f565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156103bc5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561070957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106cb5790505b5050505050815250508152602001906001019061065f565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103bc57838290600052602060002001805461076490610e8d565b80601f016020809104026020016040519081016040528092919081815260200182805461079090610e8d565b80156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081526020019060010190610745565b60085460009060ff1615610809575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190526519985a5b195960d21b602483015260009163667f9d7090604401602060405180830381865afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190610ec7565b1415905090565b601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000926101009004909116906370a0823190602401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190610ec7565b601f546021546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610ec7565b6022546020546040516392fd2daf60e01b81526001600160a01b0391821660048201526001602482015292935016906392fd2daf90604401600060405180830381600087803b1580156109d657600080fd5b505af11580156109ea573d6000803e3d6000fd5b5050601e546021546040516370a0823160e01b81526001600160a01b039182166004820152600094506101009092041691506370a0823190602401602060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a669190610ec7565b601f546021546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190610ec7565b9050610b0e82856040518060400160405280600d81526020016c32b9391031b630b4b69031b93b60991b815250610ba8565b610b4281846040518060400160405280601181526020017065727220636c61696d207265776172647360781b815250610ba8565b50505050565b60606015805480602002602001604051908101604052809291908181526020018280548015610279576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161025b575050505050905090565b604051636cd1e26960e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063d9a3c4d290610be390869086908690600401610ee0565b60006040518083038186803b158015610bfb57600080fd5b505afa158015610c0f573d6000803e3d6000fd5b50505050505050565b6104d780610f0983390190565b6020808252825182820181905260009190848201906040850190845b81811015610c665783516001600160a01b031683529284019291840191600101610c41565b50909695505050505050565b6000815180845260005b81811015610c9857602081850181015186830182015201610c7c565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610d6857603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610d5257605f19898503018352610d40848651610c72565b948e01949350918d0191600101610d24565b505050978a019794505091880191600101610cdf565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610e1c57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610e075783516001600160e01b0319168252928b019260019290920191908b0190610ddd565b50978a01979550505091870191600101610da0565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e8057603f19888603018452610e6e858351610c72565b94509285019290850190600101610e52565b5092979650505050505050565b600181811c90821680610ea157607f821691505b602082108103610ec157634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610ed957600080fd5b5051919050565b838152826020820152606060408201526000610eff6060830184610c72565b9594505050505056fe6080604052600080546001600160a01b03191673d061d61a4d941c39e5453435b6345dc261c2fce017905534801561003657600080fd5b50610491806100466000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633973acfa1461004657806392fd2daf14610062578063aa9baade14610077575b600080fd5b61004e61008a565b604051901515815260200160405180910390f35b6100756100703660046102e1565b610104565b005b610075610085366004610364565b610244565b6000805460405163a099003360e01b81523060048201523360248201526001600160a01b039091169063a0990033906044016020604051808303816000875af11580156100db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ff91906103d0565b905090565b6000826001600160a01b031663963c94b96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016891906103f4565b905080156101c457826001600160a01b031663e6f1daf26040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101ab57600080fd5b505af11580156101bf573d6000803e3d6000fd5b505050505b8180156101d457506101d461008a565b1561023f576000546040516327f18ae360e01b81526001600160a01b038581166004830152336024830152909116906327f18ae390604401600060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050505b505050565b6000835b808210156102ac576102a18686848181106102655761026561040d565b905060200201602081019061027a9190610423565b85858581811061028c5761028c61040d565b9050602002016020810190610070919061043e565b600190910190610248565b505050505050565b80356001600160a01b03811681146102cb57600080fd5b919050565b80151581146102de57600080fd5b50565b600080604083850312156102f457600080fd5b6102fd836102b4565b9150602083013561030d816102d0565b809150509250929050565b60008083601f84011261032a57600080fd5b50813567ffffffffffffffff81111561034257600080fd5b6020830191508360208260051b850101111561035d57600080fd5b9250929050565b6000806000806040858703121561037a57600080fd5b843567ffffffffffffffff8082111561039257600080fd5b61039e88838901610318565b909650945060208701359150808211156103b757600080fd5b506103c487828801610318565b95989497509550505050565b6000602082840312156103e257600080fd5b81516103ed816102d0565b9392505050565b60006020828403121561040657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561043557600080fd5b6103ed826102b4565b60006020828403121561045057600080fd5b81356103ed816102d056fea2646970667358221220165a155b7d61c696ac9a386e3417f5d43e7124a2262473d813cf49b4a459a4ef64736f6c63430008140033a2646970667358221220413afc04001cd6b9511c715f5399391ac312254b91f5ff1909f9b988f7a6dee764736f6c63430008140033",
    "sourceMap": "251:869:24:-:0;;;3126:44:2;;;-1:-1:-1;;3126:44:2;3166:4;3126:44;;;1016:26:12;;;286:70:24;-1:-1:-1;;;;;;286:70:24;;;;;;362:73;;;-1:-1:-1;;;;;;362:73:24;;;391:42;362:73;;;;441:67;;;;;465:42;441:67;;;514:66;;;;;;537:42;514:66;;;251:869;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063916a17c61161008c578063daaa15cf11610066578063daaa15cf1461018e578063dd972110146101b9578063e20c9f71146101c1578063fa7626d4146101c957600080fd5b8063916a17c614610166578063b5508aa91461016e578063ba414fa61461017657600080fd5b80633e5e3c23116100c85780633e5e3c231461012c5780633f7286f41461013457806366d9a9a01461013c57806385226c811461015157600080fd5b80630a9254e4146100ef5780631ed7831c146100f95780632ade388014610117575b600080fd5b6100f76101d6565b005b610101610221565b60405161010e9190610c25565b60405180910390f35b61011f610283565b60405161010e9190610cb8565b6101016103c5565b610101610425565b610144610485565b60405161010e9190610d78565b61015961056b565b60405161010e9190610e2b565b61014461063b565b610159610721565b61017e6107f1565b604051901515815260200161010e565b6022546101a1906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b6100f7610895565b610101610b48565b601e5461017e9060ff1681565b6040516101e290610c18565b604051809103906000f0801580156101fe573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b0392909216919091179055565b6060601680548060200260200160405190810160405280929190818152602001828054801561027957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161025b575b5050505050905090565b6060601d805480602002602001604051908101604052809291908181526020016000905b828210156103bc57600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156103a557838290600052602060002001805461031890610e8d565b80601f016020809104026020016040519081016040528092919081815260200182805461034490610e8d565b80156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050505050815260200190600101906102f9565b5050505081525050815260200190600101906102a7565b50505050905090565b60606018805480602002602001604051908101604052809291908181526020018280548015610279576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161025b575050505050905090565b60606017805480602002602001604051908101604052809291908181526020018280548015610279576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161025b575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156103bc5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561055357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116105155790505b505050505081525050815260200190600101906104a9565b6060601a805480602002602001604051908101604052809291908181526020016000905b828210156103bc5783829060005260206000200180546105ae90610e8d565b80601f01602080910402602001604051908101604052809291908181526020018280546105da90610e8d565b80156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b50505050508152602001906001019061058f565b6060601c805480602002602001604051908101604052809291908181526020016000905b828210156103bc5760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561070957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106cb5790505b5050505050815250508152602001906001019061065f565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156103bc57838290600052602060002001805461076490610e8d565b80601f016020809104026020016040519081016040528092919081815260200182805461079090610e8d565b80156107dd5780601f106107b2576101008083540402835291602001916107dd565b820191906000526020600020905b8154815290600101906020018083116107c057829003601f168201915b505050505081526020019060010190610745565b60085460009060ff1615610809575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190526519985a5b195960d21b602483015260009163667f9d7090604401602060405180830381865afa15801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e9190610ec7565b1415905090565b601e546021546040516370a0823160e01b81526001600160a01b0391821660048201526000926101009004909116906370a0823190602401602060405180830381865afa1580156108ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090e9190610ec7565b601f546021546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610ec7565b6022546020546040516392fd2daf60e01b81526001600160a01b0391821660048201526001602482015292935016906392fd2daf90604401600060405180830381600087803b1580156109d657600080fd5b505af11580156109ea573d6000803e3d6000fd5b5050601e546021546040516370a0823160e01b81526001600160a01b039182166004820152600094506101009092041691506370a0823190602401602060405180830381865afa158015610a42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a669190610ec7565b601f546021546040516370a0823160e01b81526001600160a01b0391821660048201529293506000929116906370a0823190602401602060405180830381865afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc9190610ec7565b9050610b0e82856040518060400160405280600d81526020016c32b9391031b630b4b69031b93b60991b815250610ba8565b610b4281846040518060400160405280601181526020017065727220636c61696d207265776172647360781b815250610ba8565b50505050565b60606015805480602002602001604051908101604052809291908181526020018280548015610279576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161025b575050505050905090565b604051636cd1e26960e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063d9a3c4d290610be390869086908690600401610ee0565b60006040518083038186803b158015610bfb57600080fd5b505afa158015610c0f573d6000803e3d6000fd5b50505050505050565b6104d780610f0983390190565b6020808252825182820181905260009190848201906040850190845b81811015610c665783516001600160a01b031683529284019291840191600101610c41565b50909695505050505050565b6000815180845260005b81811015610c9857602081850181015186830182015201610c7c565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b85811015610d6857603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b81811015610d5257605f19898503018352610d40848651610c72565b948e01949350918d0191600101610d24565b505050978a019794505091880191600101610cdf565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610e1c57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015610e075783516001600160e01b0319168252928b019260019290920191908b0190610ddd565b50978a01979550505091870191600101610da0565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610e8057603f19888603018452610e6e858351610c72565b94509285019290850190600101610e52565b5092979650505050505050565b600181811c90821680610ea157607f821691505b602082108103610ec157634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610ed957600080fd5b5051919050565b838152826020820152606060408201526000610eff6060830184610c72565b9594505050505056fe6080604052600080546001600160a01b03191673d061d61a4d941c39e5453435b6345dc261c2fce017905534801561003657600080fd5b50610491806100466000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633973acfa1461004657806392fd2daf14610062578063aa9baade14610077575b600080fd5b61004e61008a565b604051901515815260200160405180910390f35b6100756100703660046102e1565b610104565b005b610075610085366004610364565b610244565b6000805460405163a099003360e01b81523060048201523360248201526001600160a01b039091169063a0990033906044016020604051808303816000875af11580156100db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ff91906103d0565b905090565b6000826001600160a01b031663963c94b96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610144573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016891906103f4565b905080156101c457826001600160a01b031663e6f1daf26040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101ab57600080fd5b505af11580156101bf573d6000803e3d6000fd5b505050505b8180156101d457506101d461008a565b1561023f576000546040516327f18ae360e01b81526001600160a01b038581166004830152336024830152909116906327f18ae390604401600060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050505b505050565b6000835b808210156102ac576102a18686848181106102655761026561040d565b905060200201602081019061027a9190610423565b85858581811061028c5761028c61040d565b9050602002016020810190610070919061043e565b600190910190610248565b505050505050565b80356001600160a01b03811681146102cb57600080fd5b919050565b80151581146102de57600080fd5b50565b600080604083850312156102f457600080fd5b6102fd836102b4565b9150602083013561030d816102d0565b809150509250929050565b60008083601f84011261032a57600080fd5b50813567ffffffffffffffff81111561034257600080fd5b6020830191508360208260051b850101111561035d57600080fd5b9250929050565b6000806000806040858703121561037a57600080fd5b843567ffffffffffffffff8082111561039257600080fd5b61039e88838901610318565b909650945060208701359150808211156103b757600080fd5b506103c487828801610318565b95989497509550505050565b6000602082840312156103e257600080fd5b81516103ed816102d0565b9392505050565b60006020828403121561040657600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561043557600080fd5b6103ed826102b4565b60006020828403121561045057600080fd5b81356103ed816102d056fea2646970667358221220165a155b7d61c696ac9a386e3417f5d43e7124a2262473d813cf49b4a459a4ef64736f6c63430008140033a2646970667358221220413afc04001cd6b9511c715f5399391ac312254b91f5ff1909f9b988f7a6dee764736f6c63430008140033",
    "sourceMap": "251:869:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:68;;;:::i;:::-;;2452:134:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;2157:141::-;;;:::i;1243:204:1:-;;;:::i;:::-;;;5397:14:25;;5390:22;5372:41;;5360:2;5345:18;1243:204:1;5232:187:25;587:26:24;;;;;-1:-1:-1;;;;;587:26:24;;;;;;-1:-1:-1;;;;;5605:32:25;;;5587:51;;5575:2;5560:18;587:26:24;5424:220:25;694:424:24;;;:::i;2304:142:5:-;;;:::i;1016:26:12:-;;;;;;;;;620:68:24;668:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;654:11:24;:27;;-1:-1:-1;;;;;;654:27:24;-1:-1:-1;;;;;654:27:24;;;;;;;;;;620:68::o;2452:134:5:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:5;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:5;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:5;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:141;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:1;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:1;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:1;;:7;:39;;;6208:51:25;;;-1:-1:-1;;;6275:18:25;;;6268:34;1428:1:1;;1377:7;;6181:18:25;;1377:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;694:424:24:-;754:3;;768:4;;754:19;;-1:-1:-1;;;754:19:24;;-1:-1:-1;;;;;768:4:24;;;754:19;;;5587:51:25;734:17:24;;754:3;;;;;;;:13;;5560:18:25;;754:19:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;806:6;;823:4;;806:22;;-1:-1:-1;;;806:22:24;;-1:-1:-1;;;;;823:4:24;;;806:22;;;5587:51:25;734:39:24;;-1:-1:-1;783:20:24;;806:6;;;:16;;5560:18:25;;806:22:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;839:11;;857:5;;839:30;;-1:-1:-1;;;839:30:24;;-1:-1:-1;;;;;857:5:24;;;839:30;;;7067:51:25;839:11:24;7134:18:25;;;7127:50;783:45:24;;-1:-1:-1;839:11:24;;:17;;7040:18:25;;839:30:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;903:3:24;;917:4;;903:19;;-1:-1:-1;;;903:19:24;;-1:-1:-1;;;;;917:4:24;;;903:19;;;5587:51:25;880:20:24;;-1:-1:-1;903:3:24;;;;;;-1:-1:-1;903:13:24;;5560:18:25;;903:19:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;958:6;;975:4;;958:22;;-1:-1:-1;;;958:22:24;;-1:-1:-1;;;;;975:4:24;;;958:22;;;5587:51:25;880:42:24;;-1:-1:-1;932:23:24;;958:6;;;:16;;5560:18:25;;958:22:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;932:48;;991:50;1000:12;1014:9;991:50;;;;;;;;;;;;;-1:-1:-1;;;991:50:24;;;:8;:50::i;:::-;1051:60;1060:15;1077:12;1051:60;;;;;;;;;;;;;-1:-1:-1;;;1051:60:24;;;:8;:60::i;:::-;724:394;;;;694:424::o;2304:142:5:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:5;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;13228:134:1:-;13326:29;;-1:-1:-1;;;13326:29:1;;:11;;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13228:134;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:658:25:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:25;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:25;;14:658;-1:-1:-1;;;;;;14:658:25:o;677:423::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;823:3;1026:1;1019:4;1010:6;1005:3;1001:16;997:27;990:38;1089:4;1082:2;1078:7;1073:2;1065:6;1061:15;1057:29;1052:3;1048:39;1044:50;1037:57;;;677:423;;;;:::o;1105:1742::-;1338:2;1390:21;;;1460:13;;1363:18;;;1482:22;;;1309:4;;1338:2;1523;;1541:18;;;;1578:1;1621:15;;;1606:31;;1602:40;;1665:15;;;1309:4;;1729:1089;1745:6;1740:3;1737:15;1729:1089;;;-1:-1:-1;;1814:22:25;;;1810:36;1798:49;;1870:13;;1957:9;;-1:-1:-1;;;;;1953:35:25;1938:51;;2028:11;;2022:18;2060:15;;;2053:27;;;2141:19;;1910:15;;;2173:24;;;2354:21;;;;2220:2;2302:17;;;2290:30;;2286:39;;;2244:15;;;;2399:1;2413:296;2429:8;2424:3;2421:17;2413:296;;;2535:2;2531:7;2522:6;2514;2510:19;2506:33;2499:5;2492:48;2567:42;2602:6;2591:8;2585:15;2567:42;:::i;:::-;2638:17;;;;2557:52;-1:-1:-1;2681:14:25;;;;2457:1;2448:11;2413:296;;;-1:-1:-1;;;2796:12:25;;;;2732:6;-1:-1:-1;;2761:15:25;;;;1771:1;1762:11;1729:1089;;;-1:-1:-1;2835:6:25;;1105:1742;-1:-1:-1;;;;;;;;;;1105:1742:25:o;2852:1567::-;3054:4;3083:2;3123;3112:9;3108:18;3153:2;3142:9;3135:21;3176:6;3211;3205:13;3242:6;3234;3227:22;3268:2;3258:12;;3301:2;3290:9;3286:18;3279:25;;3363:2;3353:6;3350:1;3346:14;3335:9;3331:30;3327:39;3401:2;3393:6;3389:15;3422:1;3443;3453:937;3469:6;3464:3;3461:15;3453:937;;;3538:22;;;-1:-1:-1;;3534:36:25;3522:49;;3594:13;;3681:9;;-1:-1:-1;;;;;3677:35:25;3662:51;;3752:11;;3746:18;3784:15;;;3777:27;;;3865:19;;3634:15;;;3897:24;;;3987:21;;;;4032:1;;3955:2;3943:15;;;4046:236;4062:8;4057:3;4054:17;4046:236;;;4143:15;;-1:-1:-1;;;;;;4139:42:25;4125:57;;4251:17;;;;4090:1;4081:11;;;;;4208:14;;;;4046:236;;;-1:-1:-1;4368:12:25;;;;4305:5;-1:-1:-1;;;4333:15:25;;;;3495:1;3486:11;3453:937;;;-1:-1:-1;4407:6:25;;2852:1567;-1:-1:-1;;;;;;;;;2852:1567:25:o;4424:803::-;4586:4;4615:2;4655;4644:9;4640:18;4685:2;4674:9;4667:21;4708:6;4743;4737:13;4774:6;4766;4759:22;4812:2;4801:9;4797:18;4790:25;;4874:2;4864:6;4861:1;4857:14;4846:9;4842:30;4838:39;4824:53;;4912:2;4904:6;4900:15;4933:1;4943:255;4957:6;4954:1;4951:13;4943:255;;;5050:2;5046:7;5034:9;5026:6;5022:22;5018:36;5013:3;5006:49;5078:40;5111:6;5102;5096:13;5078:40;:::i;:::-;5068:50;-1:-1:-1;5176:12:25;;;;5141:15;;;;4979:1;4972:9;4943:255;;;-1:-1:-1;5215:6:25;;4424:803;-1:-1:-1;;;;;;;4424:803:25:o;5649:380::-;5728:1;5724:12;;;;5771;;;5792:61;;5846:4;5838:6;5834:17;5824:27;;5792:61;5899:2;5891:6;5888:14;5868:18;5865:38;5862:161;;5945:10;5940:3;5936:20;5933:1;5926:31;5980:4;5977:1;5970:15;6008:4;6005:1;5998:15;5862:161;;5649:380;;;:::o;6313:184::-;6383:6;6436:2;6424:9;6415:7;6411:23;6407:32;6404:52;;;6452:1;6449;6442:12;6404:52;-1:-1:-1;6475:16:25;;6313:184;-1:-1:-1;6313:184:25:o;7188:362::-;7393:6;7382:9;7375:25;7436:6;7431:2;7420:9;7416:18;7409:34;7479:2;7474;7463:9;7459:18;7452:30;7356:4;7499:45;7540:2;7529:9;7525:18;7517:6;7499:45;:::i;:::-;7491:53;7188:362;-1:-1:-1;;;;;7188:362:25:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "claimerTest()": "daaa15cf",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_Claim()": "dd972110"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimerTest\",\"outputs\":[{\"internalType\":\"contract Claimer\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Counter.t.sol\":\"CounterTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd61da31976d579fa227e1a754891847d63b2145b6cda3fb6d206bfe209a4b911\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e24fae65db059e21e505f4abaefc4c426d0e68280e984a57be9f3e8a60be45cb\",\"dweb:/ipfs/QmXSczwRuFbiqejVmMrEyuBP67L6bML3fWNTJwZ6uPAGWd\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x51fec240abc6dd23e0ee6de7c65106379aef732cad6c4ae5df6b55db886e7456\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://a47d9c0a9876e7f9e411843b994a741d4ac1a87d8459ffc3c56359de691ddc1a\",\"dweb:/ipfs/QmQiFN9b3Y2azrD1RBfAKEuAG3YeJkMzA2DGzgEE9kMeEK\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"src/Claimer.sol\":{\"keccak256\":\"0x8d1d671dc55bab45a24aeadd9930fdcd76792ef64e54b5acdc46641ca05a4eca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcf6c5c4cb61b0a486192cf718b839aada0220af80c86e2481fcdad61cd0ae15\",\"dweb:/ipfs/QmU1KPzpjvW8dcPjgyL2iyYGvGXsSfkXWKxv8PZYkWzLFi\"]},\"test/Counter.t.sol\":{\"keccak256\":\"0x92d31e9b80e22becdc4540ae210a2aedffd6a4b6514d684c6b9df1381511e9f5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ee56468682a755316acc079b0c41e728ef65420b9c90ee3eb7c3824001cc04a1\",\"dweb:/ipfs/QmNhRYATZMKUAev8D97oApfuv5Zq4s2e18b6ZkTtbjBbq2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "claimerTest",
          "outputs": [
            {
              "internalType": "contract Claimer",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_Claim"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Counter.t.sol": "CounterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd61da31976d579fa227e1a754891847d63b2145b6cda3fb6d206bfe209a4b911",
        "urls": [
          "bzz-raw://e24fae65db059e21e505f4abaefc4c426d0e68280e984a57be9f3e8a60be45cb",
          "dweb:/ipfs/QmXSczwRuFbiqejVmMrEyuBP67L6bML3fWNTJwZ6uPAGWd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x51fec240abc6dd23e0ee6de7c65106379aef732cad6c4ae5df6b55db886e7456",
        "urls": [
          "bzz-raw://a47d9c0a9876e7f9e411843b994a741d4ac1a87d8459ffc3c56359de691ddc1a",
          "dweb:/ipfs/QmQiFN9b3Y2azrD1RBfAKEuAG3YeJkMzA2DGzgEE9kMeEK"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9",
        "urls": [
          "bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b",
          "dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "src/Claimer.sol": {
        "keccak256": "0x8d1d671dc55bab45a24aeadd9930fdcd76792ef64e54b5acdc46641ca05a4eca",
        "urls": [
          "bzz-raw://dcf6c5c4cb61b0a486192cf718b839aada0220af80c86e2481fcdad61cd0ae15",
          "dweb:/ipfs/QmU1KPzpjvW8dcPjgyL2iyYGvGXsSfkXWKxv8PZYkWzLFi"
        ],
        "license": "MIT"
      },
      "test/Counter.t.sol": {
        "keccak256": "0x92d31e9b80e22becdc4540ae210a2aedffd6a4b6514d684c6b9df1381511e9f5",
        "urls": [
          "bzz-raw://ee56468682a755316acc079b0c41e728ef65420b9c90ee3eb7c3824001cc04a1",
          "dweb:/ipfs/QmNhRYATZMKUAev8D97oApfuv5Zq4s2e18b6ZkTtbjBbq2"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Counter.t.sol",
    "id": 46849,
    "exportedSymbols": {
      "Claimer": [
        46735
      ],
      "CounterTest": [
        46848
      ],
      "ERC20": [
        46750
      ],
      "Test": [
        12027
      ],
      "console2": [
        31878
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1081:24",
    "nodes": [
      {
        "id": 46737,
        "nodeType": "PragmaDirective",
        "src": "39:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 46740,
        "nodeType": "ImportDirective",
        "src": "65:50:24",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46849,
        "sourceUnit": 12028,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46738,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12027,
              "src": "73:4:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 46739,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31878,
              "src": "79:8:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46742,
        "nodeType": "ImportDirective",
        "src": "116:43:24",
        "nodes": [],
        "absolutePath": "src/Claimer.sol",
        "file": "../src/Claimer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46849,
        "sourceUnit": 46736,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46741,
              "name": "Claimer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46735,
              "src": "124:7:24",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46750,
        "nodeType": "ContractDefinition",
        "src": "161:88:24",
        "nodes": [
          {
            "id": 46749,
            "nodeType": "FunctionDefinition",
            "src": "183:64:24",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "192:9:24",
            "parameters": {
              "id": 46745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46744,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "210:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 46749,
                  "src": "202:12:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "202:7:24",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "201:14:24"
            },
            "returnParameters": {
              "id": 46748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46749,
                  "src": "238:7:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:9:24"
            },
            "scope": 46750,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          46750
        ],
        "name": "ERC20",
        "nameLocation": "171:5:24",
        "scope": 46849,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 46848,
        "nodeType": "ContractDefinition",
        "src": "251:869:24",
        "nodes": [
          {
            "id": 46761,
            "nodeType": "VariableDeclaration",
            "src": "286:70:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "CRV",
            "nameLocation": "292:3:24",
            "scope": 46848,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46750",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 46754,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46753,
                "name": "ERC20",
                "nameLocations": [
                  "286:5:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46750,
                "src": "286:5:24"
              },
              "referencedDeclaration": 46750,
              "src": "286:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46750",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307844353333613934393734306262333330366431313943433737376661393030624130333463643532",
                      "id": 46758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "312:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xD533a949740bb3306d119CC777fa900bA034cd52"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 46757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "304:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 46756,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "304:7:24",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 46759,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "304:51:24",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 46755,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46750,
                "src": "298:5:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46750_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 46760,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "298:58:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46750",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46770,
            "nodeType": "VariableDeclaration",
            "src": "362:73:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "crvUSD",
            "nameLocation": "368:6:24",
            "scope": 46848,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$46750",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 46763,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46762,
                "name": "ERC20",
                "nameLocations": [
                  "362:5:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46750,
                "src": "362:5:24"
              },
              "referencedDeclaration": 46750,
              "src": "362:5:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46750",
                "typeString": "contract ERC20"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "hexValue": "307866393339453041303346423037463539413733333134453733373934426530453537616331623445",
                      "id": 46767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "391:42:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    ],
                    "id": 46766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "383:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 46765,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "383:7:24",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 46768,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "383:51:24",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 46764,
                "name": "ERC20",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 46750,
                "src": "377:5:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20_$46750_$",
                  "typeString": "type(contract ERC20)"
                }
              },
              "id": 46769,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "377:58:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$46750",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46776,
            "nodeType": "VariableDeclaration",
            "src": "441:67:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "gauge",
            "nameLocation": "449:5:24",
            "scope": 46848,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46771,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "441:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834393838376446366645393035363633434442343663363136426642664242353065383561323635",
                  "id": 46774,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "465:42:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x49887dF6fE905663CDB46c616BfBfBB50e85a265"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 46773,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "457:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 46772,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "457:7:24",
                  "typeDescriptions": {}
                }
              },
              "id": 46775,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "457:51:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46782,
            "nodeType": "VariableDeclaration",
            "src": "514:66:24",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "user",
            "nameLocation": "522:4:24",
            "scope": 46848,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46777,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "514:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307839383941456234643137356531363232354533394538376430443937413333363035323441443830",
                  "id": 46780,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "537:42:24",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x989AEb4d175e16225E39E87d0D97A3360524AD80"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 46779,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "529:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 46778,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "529:7:24",
                  "typeDescriptions": {}
                }
              },
              "id": 46781,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "529:51:24",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 46785,
            "nodeType": "VariableDeclaration",
            "src": "587:26:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "daaa15cf",
            "mutability": "mutable",
            "name": "claimerTest",
            "nameLocation": "602:11:24",
            "scope": 46848,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Claimer_$46735",
              "typeString": "contract Claimer"
            },
            "typeName": {
              "id": 46784,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46783,
                "name": "Claimer",
                "nameLocations": [
                  "587:7:24"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46735,
                "src": "587:7:24"
              },
              "referencedDeclaration": 46735,
              "src": "587:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Claimer_$46735",
                "typeString": "contract Claimer"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46796,
            "nodeType": "FunctionDefinition",
            "src": "620:68:24",
            "nodes": [],
            "body": {
              "id": 46795,
              "nodeType": "Block",
              "src": "644:44:24",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46788,
                      "name": "claimerTest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46785,
                      "src": "654:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Claimer_$46735",
                        "typeString": "contract Claimer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "668:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Claimer_$46735_$",
                          "typeString": "function () returns (contract Claimer)"
                        },
                        "typeName": {
                          "id": 46790,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 46789,
                            "name": "Claimer",
                            "nameLocations": [
                              "672:7:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46735,
                            "src": "672:7:24"
                          },
                          "referencedDeclaration": 46735,
                          "src": "672:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Claimer_$46735",
                            "typeString": "contract Claimer"
                          }
                        }
                      },
                      "id": 46792,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "668:13:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Claimer_$46735",
                        "typeString": "contract Claimer"
                      }
                    },
                    "src": "654:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Claimer_$46735",
                      "typeString": "contract Claimer"
                    }
                  },
                  "id": 46794,
                  "nodeType": "ExpressionStatement",
                  "src": "654:27:24"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "629:5:24",
            "parameters": {
              "id": 46786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "634:2:24"
            },
            "returnParameters": {
              "id": 46787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:24"
            },
            "scope": 46848,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46847,
            "nodeType": "FunctionDefinition",
            "src": "694:424:24",
            "nodes": [],
            "body": {
              "id": 46846,
              "nodeType": "Block",
              "src": "724:394:24",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46800,
                      "mutability": "mutable",
                      "name": "crvBefore",
                      "nameLocation": "742:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 46846,
                      "src": "734:17:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "734:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46805,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46803,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46782,
                        "src": "768:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46801,
                        "name": "CRV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46761,
                        "src": "754:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46750",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "758:9:24",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46749,
                      "src": "754:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 46804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "754:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "734:39:24"
                },
                {
                  "assignments": [
                    46807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46807,
                      "mutability": "mutable",
                      "name": "crvUSDBefore",
                      "nameLocation": "791:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 46846,
                      "src": "783:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46806,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "783:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46812,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46810,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46782,
                        "src": "823:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46808,
                        "name": "crvUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46770,
                        "src": "806:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46750",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "813:9:24",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46749,
                      "src": "806:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 46811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "783:45:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46816,
                        "name": "gauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46776,
                        "src": "857:5:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 46817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "864:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 46813,
                        "name": "claimerTest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46785,
                        "src": "839:11:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Claimer_$46735",
                          "typeString": "contract Claimer"
                        }
                      },
                      "id": 46815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "851:5:24",
                      "memberName": "claim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46718,
                      "src": "839:17:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 46818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "839:30:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46819,
                  "nodeType": "ExpressionStatement",
                  "src": "839:30:24"
                },
                {
                  "assignments": [
                    46821
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46821,
                      "mutability": "mutable",
                      "name": "newCrvBefore",
                      "nameLocation": "888:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 46846,
                      "src": "880:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46820,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "880:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46826,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46824,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46782,
                        "src": "917:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46822,
                        "name": "CRV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46761,
                        "src": "903:3:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46750",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "907:9:24",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46749,
                      "src": "903:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 46825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:19:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "880:42:24"
                },
                {
                  "assignments": [
                    46828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46828,
                      "mutability": "mutable",
                      "name": "newCrvUSDBefore",
                      "nameLocation": "940:15:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 46846,
                      "src": "932:23:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 46827,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "932:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46833,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46831,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46782,
                        "src": "975:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46829,
                        "name": "crvUSD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46770,
                        "src": "958:6:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$46750",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 46830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "965:9:24",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46749,
                      "src": "958:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 46832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "932:48:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46835,
                        "name": "newCrvBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46821,
                        "src": "1000:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46836,
                        "name": "crvBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46800,
                        "src": "1014:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "65727220636c61696d20637276",
                        "id": 46837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1025:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df3b2ba59875224778414ec842782019e730fc96b54226b768b201737fb7d7a7",
                          "typeString": "literal_string \"err claim crv\""
                        },
                        "value": "err claim crv"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df3b2ba59875224778414ec842782019e730fc96b54226b768b201737fb7d7a7",
                          "typeString": "literal_string \"err claim crv\""
                        }
                      ],
                      "id": 46834,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1695,
                        1713,
                        1767,
                        1785
                      ],
                      "referencedDeclaration": 1713,
                      "src": "991:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 46838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:50:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46839,
                  "nodeType": "ExpressionStatement",
                  "src": "991:50:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46841,
                        "name": "newCrvUSDBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46828,
                        "src": "1060:15:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46842,
                        "name": "crvUSDBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46807,
                        "src": "1077:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "65727220636c61696d2072657761726473",
                        "id": 46843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1091:19:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eae68bdfc29ff258b08f6eb596384a4ba91a643b1fa04890b53f74327b8ff63f",
                          "typeString": "literal_string \"err claim rewards\""
                        },
                        "value": "err claim rewards"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eae68bdfc29ff258b08f6eb596384a4ba91a643b1fa04890b53f74327b8ff63f",
                          "typeString": "literal_string \"err claim rewards\""
                        }
                      ],
                      "id": 46840,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1695,
                        1713,
                        1767,
                        1785
                      ],
                      "referencedDeclaration": 1713,
                      "src": "1051:8:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 46844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:60:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46845,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:60:24"
                }
              ]
            },
            "functionSelector": "dd972110",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Claim",
            "nameLocation": "703:10:24",
            "parameters": {
              "id": 46797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "714:2:24"
            },
            "returnParameters": {
              "id": 46798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "724:0:24"
            },
            "scope": 46848,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46751,
              "name": "Test",
              "nameLocations": [
                "275:4:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12027,
              "src": "275:4:24"
            },
            "id": 46752,
            "nodeType": "InheritanceSpecifier",
            "src": "275:4:24"
          }
        ],
        "canonicalName": "CounterTest",
        "contractDependencies": [
          46735
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46848,
          12027,
          11975,
          6655,
          6330,
          5537,
          3477,
          2695,
          65,
          62
        ],
        "name": "CounterTest",
        "nameLocation": "260:11:24",
        "scope": 46849,
        "usedErrors": [],
        "usedEvents": [
          100,
          104,
          108,
          112,
          116,
          120,
          124,
          128,
          134,
          140,
          148,
          156,
          162,
          168,
          174,
          180,
          185,
          190,
          195,
          202,
          209,
          216
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 24
}